{"version":3,"sources":["Components/BirthdayPage/BirthdayItems.js","Components/BirthdayPage/BirthdayPage.js","redux/employees.js","Components/EmployeesPage/Employee.js","Components/EmployeesPage/Employees.js","Components/EmployeesPage/EmployeesPage.js","App.js","redux/store.js","index.js"],"names":["BirthdayItem","props","activeEmloyeesByMonth","month","map","i","className","lastName","firstName","day","year","id","BirthdayPage","useSelector","state","employeesPage","arrayAllEmployees","length","Object","keys","SET_EMPLOYEES","SET_ACTIVE_EMPLOYE","initialState","emloyees","employeesByAlphabet","May","June","July","August","September","October","November","December","January","February","March","April","isAddActiveEmployees","employees","action","type","alphabets","payload","start","charCodeAt","last","String","fromCharCode","toString","generateAlphabets","key","forEach","item","charAt","push","noMatch","employeeObj","employee","birthday","Date","parse","dob","getDate","getMonth","getFullYear","isActive","sort","a","b","filter","e","concat","apply","values","Employee","activeEmployeeHandler","useState","activeItem","setActiveItem","useEffect","localStorage","getItem","onChangeHandlerInput","boolean","setItem","removeItem","classNames","active","value","name","checked","onChange","target","htmlFor","Employees","objKey","emloyeesByAlphabet","EmployeesPage","dispatch","useDispatch","axios","get","response","status","data","alert","setActiveEmployee","App","rootReducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b92c3317.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const BirthdayItem = (props) => {\r\n  return (\r\n    <div>\r\n      {props.activeEmloyeesByMonth[props.month].map((i) => (\r\n        <ul className=\"employee_item\" key={i.id}>\r\n          <li>\r\n            {i.lastName} {i.firstName} - {i.day} {i.month}, {i.year} year\r\n          </li>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BirthdayItem } from './BirthdayItems'\r\nimport './BirthdayPage.css'\r\n\r\nexport const BirthdayPage = () => {\r\n  const activeEmloyeesByMonth = useSelector((state) => state.employeesPage.activeEmloyeesByMonth)\r\n  const arrayAllEmployees = useSelector((state) => state.employeesPage.arrayAllEmployees)\r\n\r\n  return (\r\n    <div className=\"birthday_page\">\r\n      <h1> Employees Birthday </h1>\r\n      {arrayAllEmployees.length === 0 && (\r\n        <div className=\"no_employees\">Employees List is empty</div>\r\n      )}\r\n      <div className=\"birthday_items\">\r\n        {Object.keys(activeEmloyeesByMonth).map((month) => {\r\n          return (\r\n            <div key={month} className=\"birthday_item\">\r\n              {activeEmloyeesByMonth[month].length !== 0 && (\r\n                <div>\r\n                  <h2>{month}</h2>\r\n                  <BirthdayItem\r\n                    activeEmloyeesByMonth={activeEmloyeesByMonth}\r\n                    key={month.id}\r\n                    month={month}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\n\r\nconst SET_EMPLOYEES = 'SET_EMPLOYEES'\r\nconst SET_IS_ACTIVE = 'SET_IS_ACTIVE'\r\nconst SET_ACTIVE_EMPLOYE = 'SET_ACTIVE_EMPLOYE'\r\n\r\nconst initialState = {\r\n  emloyees: [],\r\n  employeesByAlphabet: {},\r\n  activeEmloyeesByMonth: {\r\n    May: [],\r\n    June: [],\r\n    July: [],\r\n    August: [],\r\n    September: [],\r\n    October: [],\r\n    November: [],\r\n    December: [],\r\n    January: [],\r\n    February: [],\r\n    March: [],\r\n    April: [],\r\n  },\r\n  isAddActiveEmployees: false,\r\n  arrayAllEmployees: [],\r\n}\r\nconst employees = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_EMPLOYEES:\r\n      let employees = action.payload\r\n\r\n      // generate an object with an alphabet\r\n      let alphabets\r\n      function generateAlphabets() {\r\n        alphabets = {}\r\n        let start = 'A'.charCodeAt(0)\r\n        let last = 'Z'.charCodeAt(0)\r\n        for (let i = start; i <= last; ++i) {\r\n          alphabets[String.fromCharCode(i).toString()] = []\r\n        }\r\n        return alphabets\r\n      }\r\n      generateAlphabets()\r\n\r\n      //sort employees by alphabets\r\n      for (let key in alphabets) {\r\n        employees.forEach((item) => {\r\n          if (key === item.lastName.charAt(0)) {\r\n            alphabets[key].push(item)\r\n          } else {\r\n            return\r\n          }\r\n        })\r\n        if (alphabets[key].length == 0) {\r\n          alphabets[key].push({ noMatch: '-----' })\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        emloyees: action.payload,\r\n        employeesByAlphabet: alphabets,\r\n      }\r\n\r\n    case SET_ACTIVE_EMPLOYE:\r\n      let employee = action.payload.employee\r\n      let employeeObj = {}\r\n      const monthNames = [\r\n        'May',\r\n        'June',\r\n        'July',\r\n        'August',\r\n        'September',\r\n        'October',\r\n        'November',\r\n        'December',\r\n        'January',\r\n        'February',\r\n        'March',\r\n        'April',\r\n      ]\r\n      let activeEmloyeesByMonth = state.activeEmloyeesByMonth\r\n      const birthday = new Date(Date.parse(employee.dob))\r\n      let day = birthday.getDate()\r\n      let monthIndex = birthday.getMonth()\r\n      let month = monthNames[monthIndex]\r\n      let year = birthday.getFullYear()\r\n      employeeObj = {\r\n        day,\r\n        month,\r\n        year,\r\n        id: employee.id,\r\n        lastName: employee.lastName,\r\n        firstName: employee.firstName,\r\n      }\r\n      if (action.payload.isActive) {\r\n        activeEmloyeesByMonth[month] = [...activeEmloyeesByMonth[month], employeeObj].sort(\r\n          (a, b) => a.lastName - b.lastName,\r\n        )\r\n      } else {\r\n        activeEmloyeesByMonth[month] = activeEmloyeesByMonth[month]\r\n          .filter((e) => e.id !== employee.id)\r\n          .sort((a, b) => a.lastName - b.lastName)\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        activeEmloyeesByMonth,\r\n        isAddActiveEmployees: !state.isAddActiveEmployees,\r\n        arrayAllEmployees: [].concat.apply([], Object.values(state.activeEmloyeesByMonth)),\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setEmployees = (emloyees) => ({\r\n  type: SET_EMPLOYEES,\r\n  payload: emloyees,\r\n})\r\n\r\nexport const setActiveEmployee = (employee, isActive) => ({\r\n  type: SET_ACTIVE_EMPLOYE,\r\n  payload: { employee, isActive },\r\n})\r\n\r\nexport const requestEmployees = () => async (dispatch) => {\r\n  try {\r\n    let response = await axios.get(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\r\n    if (response.status === 200) {\r\n      dispatch(setEmployees(response.data))\r\n    }\r\n  } catch (e) {\r\n    alert('не сработает')\r\n  }\r\n}\r\nexport default employees\r\n","import React, { useEffect, useState } from 'react'\r\nimport classNames from 'classnames'\r\nimport './EmployeesPage.css'\r\n\r\nexport const Employee = ({ item, activeEmployeeHandler }) => {\r\n  const [activeItem, setActiveItem] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const activeEmploye = localStorage.getItem(item.id)\r\n    if (activeEmploye !== null) {\r\n      setActiveItem(true)\r\n      activeEmployeeHandler(item, true)\r\n    }\r\n  }, [])\r\n\r\n  const onChangeHandlerInput = (isActive) => {\r\n    const boolean = isActive === 'true' ? true : false\r\n\r\n    setActiveItem(boolean)\r\n    if (boolean) {\r\n      localStorage.setItem(item.id, item.id)\r\n      activeEmployeeHandler(item, true)\r\n    } else {\r\n      localStorage.removeItem(item.id)\r\n      activeEmployeeHandler(item, false)\r\n    }\r\n  }\r\n\r\n  if (item.noMatch) {\r\n    return <div>{item.noMatch}</div>\r\n  }\r\n  return (\r\n    <div className=\"employee_item\">\r\n      <div key={item.id} className={classNames('employee_item_name', { active: activeItem })}>\r\n        {item.lastName} {item.firstName}\r\n      </div>\r\n      <form className=\"employee_item_form\">\r\n        <fieldset>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"false\"\r\n            name=\"notActive\"\r\n            checked={activeItem === false}\r\n            onChange={(e) => onChangeHandlerInput(e.target.value)}\r\n          />\r\n          <label htmlFor=\"notActive\">Not active</label>\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            value=\"true\"\r\n            name=\"active\"\r\n            checked={activeItem === true}\r\n            onChange={(e) => onChangeHandlerInput(e.target.value)}\r\n          />\r\n          <label htmlFor=\"active\">Active</label>\r\n          <br />\r\n        </fieldset>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Employee } from './Employee'\r\nimport './EmployeesPage.css'\r\n\r\nexport const Employees = ({ objKey, emloyeesByAlphabet, activeEmployeeHandler }) => {\r\n  return (\r\n    <div>\r\n      {emloyeesByAlphabet[objKey].map((item) => (\r\n        <Employee\r\n          item={item}\r\n          activeEmployeeHandler={activeEmployeeHandler}\r\n          key={`${item.id}_${item.lastName}`}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { requestEmployees, setActiveEmployee } from '../../redux/employees'\r\nimport { Employees } from './Employees'\r\n\r\nexport const EmployeesPage = () => {\r\n  const emloyeesByAlphabet = useSelector((state) => state.employeesPage.employeesByAlphabet)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(requestEmployees())\r\n  }, [])\r\n\r\n  const activeEmployeeHandler = (employee, isActive) => {\r\n    dispatch(setActiveEmployee(employee, isActive))\r\n  }\r\n  return (\r\n    <div className=\"employees_page\">\r\n      <h1>Employees</h1>\r\n      <div className=\"employees_content\">\r\n        {Object.keys(emloyeesByAlphabet).map((key) => {\r\n          return (\r\n            <div key={key} className=\"employee_items\">\r\n              <h2>{key}</h2>\r\n              <Employees\r\n                emloyeesByAlphabet={emloyeesByAlphabet}\r\n                key={key.id}\r\n                objKey={key}\r\n                activeEmployeeHandler={activeEmployeeHandler}\r\n              />\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport { BirthdayPage } from './Components/BirthdayPage/BirthdayPage'\nimport { EmployeesPage } from './Components/EmployeesPage/EmployeesPage'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">\n        <EmployeesPage />\n        <BirthdayPage />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport employees from './employees'\r\n\r\nconst rootReducers = combineReducers({\r\n  employeesPage: employees,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunk)))\r\nwindow.store = store\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}